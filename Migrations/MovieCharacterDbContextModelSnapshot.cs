// <auto-generated />
using System;
using AssignmentWebAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AssignmentWebAPI.Migrations
{
    [DbContext(typeof(MovieCharacterDbContext))]
    partial class MovieCharacterDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AssignmentWebAPI.Models.Domain.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Character");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alias = "Peter Parker",
                            FullName = "Peter Benjamin Parker",
                            Gender = "Male",
                            Picture = "https://sv.wikipedia.org/wiki/Spider-Man:_No_Way_Home#/media/Fil:No_way_home_logo.png"
                        },
                        new
                        {
                            Id = 2,
                            Alias = "Green Goblin",
                            FullName = "Harold Osborn",
                            Gender = "Male",
                            Picture = "https://marvel.fandom.com/wiki/Harold_Osborn_(Earth-616)?file=Amazing_Spider-Man_Vol_5_76_Marvel_Masterpieces_Variant_Textless.png"
                        },
                        new
                        {
                            Id = 3,
                            Alias = "Mr. DeVere",
                            FullName = "Galahad",
                            Gender = "Male",
                            Picture = "https://kingsman.fandom.com/wiki/Harry_Hart?file=Former+Agent+Galahad.jpeg"
                        },
                        new
                        {
                            Id = 4,
                            Alias = "Merlin",
                            FullName = "Hamish Mycroft",
                            Gender = "Male",
                            Picture = "https://hero.fandom.com/wiki/Merlin_(Kingsman)?file=Kingsman_the_golden_circle_merlin_2_png_by_mintmovi3-dbops4h.png"
                        },
                        new
                        {
                            Id = 5,
                            Alias = "Eggsy",
                            FullName = "Gary Unwin",
                            Gender = "Male",
                            Picture = "https://hero.fandom.com/wiki/Gary_%22Eggsy%22_Unwin?file=Eggsy_and_the_Orange_Jacket.jpg"
                        },
                        new
                        {
                            Id = 6,
                            Alias = "Keanu",
                            FullName = "Jardni Jovanovich",
                            Gender = "Male",
                            Picture = "https://en.wikipedia.org/wiki/John_Wick_(character)#/media/File:John_Wick_Keanu.jpeg"
                        });
                });

            modelBuilder.Entity("AssignmentWebAPI.Models.Domain.Franchise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FranchiseName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Franchise");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = " The fictional character Spider  Man a comic book superhero created by Stan Lee and Steve Ditko and featuredin Marvel Comics publications, has appeared as a main character in multiple theatrical and made -for-television films. ",
                            FranchiseName = "Spider-Man Franchise"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Kingsman is a British American film franchise, consisting of action comedy films, that follow the missions of the Kingsman, a fictional secret service organization. ",
                            FranchiseName = "Kingsman Franchise"
                        },
                        new
                        {
                            Id = 3,
                            Description = "The story focuses on John Wick (Reeves) searching for the men who broke into his home, stole his vintage car and killed his puppy, which was a last gift to him from his recently deceased wife...",
                            FranchiseName = "John Wick Franchise"
                        });
                });

            modelBuilder.Entity("AssignmentWebAPI.Models.Domain.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Director")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PictureUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Trailer")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("FranchiseId");

                    b.ToTable("Movie");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Director = "Jon Watts",
                            FranchiseId = 1,
                            Genre = "Action/Sci-Fi",
                            PictureUrl = "https://sv.wikipedia.org/wiki/Spider-Man:_No_Way_Home#/media/Fil:No_way_home_logo.png",
                            ReleaseYear = 2021,
                            Title = "Spider-Man: No Way Home",
                            Trailer = "https://www.youtube.com/watch?v=JfVOs4VSpmA"
                        },
                        new
                        {
                            Id = 2,
                            Director = "Sam Raimi",
                            FranchiseId = 1,
                            Genre = "Action/Sci-Fi",
                            PictureUrl = "https://en.wikipedia.org/wiki/Spider-Man_(2002_film)#/media/File:Spider-Man2002Poster.jpg",
                            ReleaseYear = 2004,
                            Title = "Spider-Man",
                            Trailer = "https://www.youtube.com/watch?v=TYMMOjBUPMM"
                        },
                        new
                        {
                            Id = 3,
                            Director = "Avi Arad",
                            FranchiseId = 1,
                            Genre = "Action/Sci-Fi",
                            PictureUrl = "https://sv.wikipedia.org/wiki/Spider-Man_2#/media/Fil:Spider-Man_2-Logo.svg",
                            ReleaseYear = 2004,
                            Title = "Spider-Man 2",
                            Trailer = "https://www.youtube.com/watch?v=1s9Yln0YwCw"
                        },
                        new
                        {
                            Id = 4,
                            Director = "Matthew Vaughn",
                            FranchiseId = 2,
                            Genre = "Action",
                            PictureUrl = "https://kingsman.fandom.com/wiki/Kingsman:_The_Secret_Service_(film)?file=Image.jpg",
                            ReleaseYear = 2015,
                            Title = "Kingsman: The Secret Service",
                            Trailer = "https://www.youtube.com/watch?v=kl8F-8tR8to"
                        },
                        new
                        {
                            Id = 5,
                            Director = "Matthew Vaughn",
                            FranchiseId = 2,
                            Genre = "Action",
                            PictureUrl = "https://www.deviantart.com/nandha602/art/The-King-s-Man-2021-Movie-Folder-Icon-v5-850141109",
                            ReleaseYear = 2021,
                            Title = "The king's man",
                            Trailer = "https://www.youtube.com/watch?v=5zdBG-iGfes"
                        },
                        new
                        {
                            Id = 6,
                            Director = "Matthew Vaughn",
                            FranchiseId = 2,
                            Genre = "Action",
                            PictureUrl = "https://sv.wikipedia.org/wiki/Kingsman:_The_Golden_Circle#/media/Fil:Kingsman_the_golden_circle_logo.png",
                            ReleaseYear = 2017,
                            Title = "Kingsman: The Golden Circle",
                            Trailer = "https://www.youtube.com/watch?v=6Nxc-3WpMbg"
                        },
                        new
                        {
                            Id = 7,
                            Director = "Chad Stehelski",
                            FranchiseId = 3,
                            Genre = "Action",
                            PictureUrl = "https://en.wikipedia.org/wiki/John_Wick_(film)#/media/File:John_Wick_TeaserPoster.jpg",
                            ReleaseYear = 2014,
                            Title = "John Wick",
                            Trailer = "https://www.youtube.com/watch?v=2AUmvWm5ZDQ"
                        },
                        new
                        {
                            Id = 8,
                            Director = "Chad Stehelski",
                            FranchiseId = 3,
                            Genre = "Action",
                            PictureUrl = "https://en.wikipedia.org/wiki/John_Wick_(film)#/media/File:John_Wick_TeaserPoster.jpg",
                            ReleaseYear = 2017,
                            Title = "John Wick: Chapter 2",
                            Trailer = "https://www.youtube.com/watch?v=2AUmvWm5ZDQ"
                        });
                });

            modelBuilder.Entity("CharactersMovie", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.HasKey("MovieId", "CharacterId");

                    b.HasIndex("CharacterId");

                    b.ToTable("CharactersMovie");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            CharacterId = 1
                        },
                        new
                        {
                            MovieId = 2,
                            CharacterId = 1
                        },
                        new
                        {
                            MovieId = 2,
                            CharacterId = 2
                        },
                        new
                        {
                            MovieId = 3,
                            CharacterId = 1
                        },
                        new
                        {
                            MovieId = 4,
                            CharacterId = 3
                        },
                        new
                        {
                            MovieId = 4,
                            CharacterId = 4
                        },
                        new
                        {
                            MovieId = 4,
                            CharacterId = 5
                        },
                        new
                        {
                            MovieId = 5,
                            CharacterId = 5
                        },
                        new
                        {
                            MovieId = 6,
                            CharacterId = 3
                        },
                        new
                        {
                            MovieId = 6,
                            CharacterId = 4
                        },
                        new
                        {
                            MovieId = 6,
                            CharacterId = 5
                        },
                        new
                        {
                            MovieId = 7,
                            CharacterId = 6
                        },
                        new
                        {
                            MovieId = 8,
                            CharacterId = 6
                        });
                });

            modelBuilder.Entity("AssignmentWebAPI.Models.Domain.Movie", b =>
                {
                    b.HasOne("AssignmentWebAPI.Models.Domain.Franchise", "Franchise")
                        .WithMany("Movies")
                        .HasForeignKey("FranchiseId");

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("CharactersMovie", b =>
                {
                    b.HasOne("AssignmentWebAPI.Models.Domain.Character", null)
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssignmentWebAPI.Models.Domain.Movie", null)
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssignmentWebAPI.Models.Domain.Franchise", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
